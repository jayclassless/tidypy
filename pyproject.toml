[build-system]
requires = [
    "poetry>=0.12",
]
build-backend = "poetry.masonry.api"


[tool.poetry]
name = "tidypy"
version = "0.15.0"
description = "A tool that executes a suite of static analysis tools upon a Python project."
authors = [
    "Jason Simeone <jay@classless.net>"
]
license = "MIT"
readme = "README.rst"
homepage = "https://github.com/jayclassless/tidypy"
keywords = [
    "tidypy",
    "lint",
    "linter",
    "static analysis",
    "pep8",
    "pep257",
    "pylint",
]
classifiers = [
    "Environment :: Console",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "Topic :: Software Development",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
    "Development Status :: 4 - Beta",
]
include = [
    "CHANGES.rst",
]

[tool.poetry.dependencies]
python = "^3.6"
click = ">=6,<8"
tqdm = ">=4.11,<5"
toml = ">=0.10,<0.11"
pyyaml = ">=3.12,<6"
requests = ">=2,<3"
basicserial = ">=0.1,<2.0"
pycodestyle = ">=2.4,<2.7"
pep8-naming = ">=0.4,<0.12"
pyroma = ">=2.2,<3"
vulture = ">=1.5,<2"
bandit = ">=1.4,<2"
pyflakes = ">=1.5,<2.3"
mccabe = ">=0.6,<0.7"
demjson = ">=2.2.4,<3"
yamllint = ">=1.8,<2"
restructuredtext-lint = ">=1.1,<2"
dennis = ">=0.9,<1"
check-manifest = ">=0.42,<0.43"
pydiatra = ">=0.12.2,<0.13"
detect-secrets = ">=0.14,<0.15"
eradicate = ">=1,<2"
dlint = ">=0.8,<0.11"
pylint = ">=2,<2.6"
pydocstyle = ">=4,<6"

[tool.poetry.dev-dependencies]
coverage = "*"
nose = "*"
pbbt = "*"
pytest = "*"
requests-mock = "*"
rstyoutube = "*"
Sphinx = "*"
sphinx_rtd_theme = "*"

[tool.poetry.scripts]
tidypy = "tidypy.cli:main"

[tool.poetry.plugins."tidypy.tools"]
pycodestyle = "tidypy.tools.pycodestyle:PyCodeStyleTool"
pydocstyle = "tidypy.tools.pydocstyle:PyDocStyleTool"
pyroma = "tidypy.tools.pyroma:PyromaTool"
vulture = "tidypy.tools.vulture:VultureTool"
bandit = "tidypy.tools.bandit:BanditTool"
eradicate = "tidypy.tools.eradicate:EradicateTool"
pyflakes = "tidypy.tools.pyflakes:PyFlakesTool"
mccabe = "tidypy.tools.mccabe:McCabeTool"
pylint = "tidypy.tools.pylint:PyLintTool"
jsonlint = "tidypy.tools.jsonlint:JsonLintTool"
yamllint = "tidypy.tools.yamllint:YamlLintTool"
rstlint = "tidypy.tools.rstlint:RstLintTool"
polint = "tidypy.tools.polint:PoLintTool"
manifest = "tidypy.tools.manifest:CheckManifestTool"
pydiatra = "tidypy.tools.pydiatra:PyDiatraTool"
secrets = "tidypy.tools.secrets:DetectSecretsTool"
dlint = "tidypy.tools.dlint:DlintTool"

[tool.poetry.plugins."tidypy.reports"]
console = "tidypy.reports.console:ConsoleReport"
custom = "tidypy.reports.custom:CustomReport"
pycodestyle = "tidypy.reports.pycodestyle:PyCodeStyleReport"
json = "tidypy.reports.structured:JsonReport"
toml = "tidypy.reports.structured:TomlReport"
yaml = "tidypy.reports.structured:YamlReport"
csv = "tidypy.reports.structured:CsvReport"
pylint = "tidypy.reports.pylint:PyLintReport"
pylint-parseable = "tidypy.reports.pylint:PyLintParseableReport"
null = "tidypy.reports.null:NullReport"

[tool.poetry.plugins."tidypy.extenders"]
github = "tidypy.extenders.github:GithubExtender"
github-gist = "tidypy.extenders.github_gist:GithubGistExtender"
bitbucket = "tidypy.extenders.bitbucket:BitbucketExtender"
bitbucket-snippet = "tidypy.extenders.bitbucket_snippet:BitbucketSnippetExtender"
gitlab = "tidypy.extenders.gitlab:GitlabExtender"
gitlab-snippet = "tidypy.extenders.gitlab_snippet:GitlabSnippetExtender"
pastebin = "tidypy.extenders.pastebin:PastebinExtender"

[tool.poetry.plugins."pytest11"]
tidypy = "tidypy.plugin.pytest"

[tool.poetry.plugins."nose.plugins.0.10"]
tidypy = "tidypy.plugin.nose:TidyPy"


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-vv"


[tool.coverage.run]
data_file = ".coverage"
source = [
    "tidypy",
]
omit = [
    "src/tidypy/__main__.py",
]
branch = true
concurrency = [
    "multiprocessing",
]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "raise NotImplementedError",
    "pragma: no cover",
]


[tool.tidypy]
exclude = [
    'docs/source/conf.py',
    'test/.*',
    'build/.*',
    'dist/.*',
    '.pytest_cache/.*',
    'poetry.lock',
]
vulture = {use = false}
disabled = []
merge-issues = false

[tool.tidypy.report]
custom = {format = '{filename}|{line:>05}|{character:<3}|{tool}|{code}|{message}'}

[tool.tidypy.pycodestyle]
disabled = [
    'W391',
    'E731',
]

[tool.tidypy.pydocstyle]
disabled = [
    'D100', 'D101', 'D102', 'D103', 'D104', 'D105', 'D107',
    'D200', 'D202', 'D203', 'D205', 'D212',
    'D400', 'D401', 'D415',
]

[tool.tidypy.pylint]
disabled = [
    'missing-docstring',
    'trailing-newlines',
    'no-self-use',
    'duplicate-code',
    'useless-object-inheritance',
    'consider-using-dict-comprehension',
]
[tool.tidypy.pylint.options]
min-public-methods = 0
max-args = 6
max-locals = 20

[tool.tidypy.pyflakes]
disabled = [
    'UnusedImport',
    'ImportStarUsed',
]

[tool.tidypy.yamllint]
disabled = [
    'empty-lines',
    'document-start',
]

[tool.tidypy.2to3]
disabled = [
    'future',
]

[tool.tidypy.rstlint.options]
sphinx-extensions = [
    'sphinx.ext.autodoc',
]
ignore-roles = [
    'ref',
]

[tool.tidypy.secrets]
disabled = [
    'KeywordDetector',
]

